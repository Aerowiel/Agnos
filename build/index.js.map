{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/theme/layouts/GenericLayout/GenericLayout.tsx", "../app/ws-context.tsx", "../app/routes/_index.tsx", "../app/session.server.ts", "../app/theme/pages/JoinChat/JoinChat.tsx", "../app/theme/components/Button/Button.tsx", "../app/theme/components/Form/InputWrapper/InputWrapper.tsx", "../app/theme/components/Form/Input/Input.tsx", "../app/theme/components/Logo/Logo.tsx", "../app/routes/chat.tsx", "../app/theme/pages/ChatRoom/ChatRoom.tsx", "../app/utils/sanitizeHtml.ts", "../app/utils/uuidValidateV4.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type { LinksFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration } from\n\"@remix-run/react\";\nimport { useEffect, useState } from \"react\";\nimport { connect, Socket } from \"socket.io-client\";\nimport { DefaultEventsMap } from \"socket.io/dist/typed-events\";\n\nimport styles from \"~/styles/main.css\";\nimport GenericLayout from \"~/theme/layouts/GenericLayout\";\nimport { wsContext } from \"./ws-context\";\n\nexport const links: LinksFunction = () => {\n  return [\n  {\n    rel: \"stylesheet\",\n    href: styles\n  }];\n\n};\n\nexport default function App() {\n  let [socket, setSocket] =\n  useState<Socket<DefaultEventsMap, DefaultEventsMap>>();\n\n  useEffect(() => {\n    let connection = connect();\n    setSocket(connection);\n    return () => {\n      connection.close();\n    };\n  }, []);\n\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <wsContext.Provider value={socket}>\n          <GenericLayout>\n            <Outlet />\n          </GenericLayout>\n        </wsContext.Provider>\n\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}", "import { ReactNode } from \"react\";\n\nconst GenericLayout = ({ children }: { children: ReactNode }) => {\n  return (\n    <div className=\"generic-layout\">\n      <div className=\"generic-layout__content\">{children}</div>\n    </div>\n  );\n};\n\nexport default GenericLayout;\n", "import { createContext } from \"react\";\nimport { Socket } from \"socket.io-client\";\nimport { DefaultEventsMap } from \"socket.io/dist/typed-events\";\n\nexport let wsContext = createContext<\n  Socket<DefaultEventsMap, DefaultEventsMap> | undefined\n>(undefined);\n", "import { ActionArgs, V2_MetaFunction, redirect } from \"@remix-run/node\";\nimport { json } from \"react-router\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { createUserSession } from \"~/session.server\";\nimport JoinChat from \"~/theme/pages/JoinChat\";\n\nexport const meta: V2_MetaFunction = () => {\n  return [\n    { title: \"Agnos\" },\n    { name: \"description\", content: \"Agnos, anonymous chat\" },\n  ];\n};\n\nexport const action = async ({ request }: ActionArgs) => {\n  const formData = await request.formData();\n  const action = formData.get(\"_action\") as string;\n  const username = formData.get(\"username\") as string;\n  const trimmedUsername = username.substring(0, 20);\n\n  switch (action) {\n    case \"create-new-chat\":\n      const randomChatId = uuidv4();\n      return createUserSession({\n        request,\n        chatId: randomChatId,\n        username: trimmedUsername,\n      });\n    case \"join-existing-chat\":\n      const chatId = formData.get(\"chat-id\") as string;\n      if (!chatId) {\n        return redirect(\"/\");\n      }\n      return createUserSession({ request, chatId, username: trimmedUsername });\n    default:\n      return json(\"unrecognized action: \", { status: 400 });\n  }\n};\n\nconst IndexRoute = () => {\n  return <JoinChat />;\n};\n\nexport default IndexRoute;\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nexport async function createUserSession({\n  request,\n  chatId,\n  username,\n}: {\n  request: Request;\n  chatId: string;\n  username: String;\n}) {\n  const session = await getSession(request);\n  session.set(chatId, username);\n  return redirect(`/chat?id=${chatId}`, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\n        maxAge: 60 * 60 * 24 * 7, // 7 days\n      }),\n    },\n  });\n}\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get(\"Cookie\");\n\n  const session = await sessionStorage.getSession(cookie);\n\n  return session;\n}\n\nexport async function getSessionUsername(request: Request, chatId: string) {\n  const session = await getSession(request);\n\n  return session.get(chatId);\n}\n", "import { Form, useSearchParams } from \"@remix-run/react\";\nimport Button from \"~/theme/components/Button\";\nimport Input from \"~/theme/components/Form/Input\";\nimport Logo from \"~/theme/components/Logo\";\n\nconst JoinChat = () => {\n  const [searchParams] = useSearchParams();\n  const chatId = searchParams.get(\"chatId\");\n\n  return (\n    <div className=\"join-chat\">\n      <Logo />\n      <div className=\"join-chat__title\">\n        {chatId && (\n          <>\n            Join&nbsp;<b>{chatId}</b>\n          </>\n        )}\n      </div>\n      <Form method=\"post\">\n        <Input\n          required\n          autoFocus\n          id=\"username\"\n          name=\"username\"\n          type=\"text\"\n          label=\"Username\"\n          maxLength={20}\n        />\n\n        {chatId ? (\n          <>\n            <input type=\"hidden\" name=\"chat-id\" value={chatId} />\n            <input type=\"hidden\" name=\"_action\" value=\"join-existing-chat\" />\n          </>\n        ) : (\n          <input type=\"hidden\" name=\"_action\" value=\"create-new-chat\" />\n        )}\n        <Button type=\"submit\">\n          {chatId ? \"Join\" : \"Create new chat room\"}\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default JoinChat;\n", "import classNames from \"classnames\";\n\ninterface ButtonProps {\n  children: JSX.Element | string;\n  appearance?: string;\n  className?: string;\n  [key: string]: any;\n}\n\nexport default function Button({\n  children,\n  appearance,\n  className,\n  ...buttonProps\n}: ButtonProps) {\n  return (\n    <button\n      {...buttonProps}\n      className={classNames(\"button\", {\n        ...(appearance ? { [`button--${appearance}`]: true } : null),\n        ...(className ? { [className]: true } : {}),\n      })}\n    >\n      {children}\n    </button>\n  );\n}\n", "interface FormItemProps {\n  label?: string;\n  error?: string;\n  children: JSX.Element;\n}\n\nconst InputWrapper = ({ label, error, children }: FormItemProps) => {\n  return (\n    <div className=\"input-wrapper\">\n      {label ? <label className=\"input-wrapper__label\">{label}</label> : null}\n      <div className=\"input-wrapper__input\">{children}</div>\n      {error ? <div className=\"input-wrapper__error\">{error}</div> : null}\n    </div>\n  );\n};\n\nexport default InputWrapper;\n", "import InputWrapper from \"../InputWrapper\";\n\ninterface InputProps {\n  label?: string;\n  error?: string;\n  [key: string]: any;\n}\n\nconst Input = ({ label, error, ...inputProps }: InputProps) => {\n  return (\n    <InputWrapper label={label} error={error}>\n      <input {...inputProps} className=\"input\" spellCheck={false} />\n    </InputWrapper>\n  );\n};\n\nexport default Input;\n", "const Logo = () => {\n  return (\n    <div className=\"logo\">\n      {`\n  \u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2557   \u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\n \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255D \u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255D\n \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2551  \u2588\u2588\u2588\u2557\u2588\u2588\u2554\u2588\u2588\u2557 \u2588\u2588\u2551\u2588\u2588\u2551   \u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\n \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2551   \u2588\u2588\u2551\u2588\u2588\u2551\u255A\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2551   \u2588\u2588\u2551\u255A\u2550\u2550\u2550\u2550\u2588\u2588\u2551\n \u2588\u2588\u2551  \u2588\u2588\u2551\u255A\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255D\u2588\u2588\u2551 \u255A\u2588\u2588\u2588\u2588\u2551\u255A\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255D\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\n           `}\n    </div>\n  );\n};\n\nexport default Logo;\n", "import { LoaderArgs, redirect } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { getSessionUsername } from \"~/session.server\";\nimport ChatRoom from \"~/theme/pages/ChatRoom\";\nimport uuidValidateV4 from \"~/utils/uuidValidateV4\";\n\nexport async function loader({ request }: LoaderArgs) {\n  const url = new URL(request.url);\n  const chatId = url.searchParams.get(\"id\");\n\n  if (!chatId) {\n    return redirect(\"/\");\n  }\n\n  const isValidUuidV4 = uuidValidateV4(chatId);\n\n  if (!isValidUuidV4) {\n    return redirect(\"/\");\n  }\n\n  const username = await getSessionUsername(request, chatId);\n\n  if (!username) {\n    return redirect(`/?chatId=${chatId}`);\n  }\n\n  return { chatId, username };\n}\n\nconst ChatRoomRoute = () => {\n  const { chatId, username } = useLoaderData<{\n    chatId: string;\n    username: string;\n  }>();\n\n  return <ChatRoom chatId={chatId} username={username} />;\n};\n\nexport default ChatRoomRoute;\n", "import classNames from \"classnames\";\nimport {\n  KeyboardEvent,\n  ReactNode,\n  RefObject,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { UserMessage, SystemMessage } from \"~/types/chat\";\nimport sanitizeHtml from \"~/utils/sanitizeHtml\";\nimport { wsContext } from \"~/ws-context\";\n\nconst NOELSHACK_URL = \"https://image.noelshack.com/\";\n\nconst timesampToHumanTime = (timestamp: string): string => {\n  const date = new Date(Number(timestamp));\n  const hours = String(date.getHours()).padStart(2, \"0\");\n  const minutes = String(date.getMinutes()).padStart(2, \"0\");\n\n  const humanTime = `${hours}:${minutes}`;\n\n  return humanTime;\n};\n\nconst ChatMessagePrefix = ({\n  isSystem,\n  username,\n  timestamp,\n}: {\n  isSystem?: boolean;\n  username: string;\n  timestamp?: string;\n}) => {\n  return (\n    <>\n      {timestamp && (\n        <>\n          {\"[\"}\n          <span className=\"chat-message-prefix__time\">\n            {timesampToHumanTime(timestamp)}\n          </span>\n          {\"]\"}&nbsp;\n        </>\n      )}\n      <span\n        className={classNames(\"chat-message-prefix__username\", {\n          \"chat-message-prefix__username--system\": isSystem,\n        })}\n      >\n        {username}\n      </span>\n      <span className=\"chat-message-prefix__chars\">&nbsp;$&nbsp;</span>\n    </>\n  );\n};\n\nconst SendMessageAction = ({\n  inputRef,\n  username,\n  sendMessage,\n}: {\n  inputRef: RefObject<HTMLTextAreaElement>;\n  username: string;\n  sendMessage: (message: string) => void;\n}) => {\n  const [message, setMessage] = useState(\"\");\n\n  const handleKeyDown = (event: KeyboardEvent<HTMLTextAreaElement>) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      sendMessage(message);\n      setMessage(\"\");\n    }\n  };\n\n  return (\n    <div className=\"send-message-action\">\n      <ChatMessagePrefix username={username} />\n      <textarea\n        onKeyDown={handleKeyDown}\n        ref={inputRef}\n        rows={2}\n        required\n        autoFocus\n        value={message}\n        onChange={(event) => {\n          setMessage(event.target.value);\n        }}\n        maxLength={300}\n      />\n    </div>\n  );\n};\n\nconst ChatMessage = ({\n  isSystem,\n  timestamp,\n  username,\n  message,\n}: {\n  isSystem?: boolean;\n  timestamp: string;\n  username: string;\n  message: string;\n}) => {\n  return (\n    <div className=\"chat-message\">\n      <ChatMessagePrefix\n        isSystem\n        username={isSystem ? \"System\" : username}\n        timestamp={timestamp}\n      />\n      <span\n        className=\"chat-message__message\"\n        dangerouslySetInnerHTML={sanitizeHtml(message)}\n      />\n    </div>\n  );\n};\n\nconst ChatSystemMessage = ({\n  timestamp,\n  message,\n}: Omit<SystemMessage, \"type\">) => {\n  return (\n    <ChatMessage\n      isSystem\n      timestamp={timestamp}\n      username=\"System\"\n      message={message}\n    />\n  );\n};\n\nconst ChatUserMessage = ({\n  timestamp,\n  message,\n  username,\n}: Omit<UserMessage, \"type\">) => {\n  const applyFormatting = (message: string): string | any => {\n    const noelshackRegex = new RegExp(\n      \"(https://(image|www).noelshack.com/(fichiers|minis)/[0-9]*/[0-9]*/[0-9]*/[a-zA-Z0-9-]*.(png|jpg))\",\n      \"gm\"\n    );\n\n    if (message.match(noelshackRegex)) {\n      message = message.replaceAll(\n        noelshackRegex,\n        '<img class=\"noelshack-image\" src=$1 />'\n      );\n    }\n\n    return message;\n  };\n\n  return (\n    <ChatMessage\n      timestamp={timestamp}\n      username={username}\n      message={applyFormatting(message)}\n    />\n  );\n};\n\nconst UsersTooltip = ({ users }: { users?: string[] }) => {\n  if (!users?.length) {\n    return null;\n  }\n\n  return (\n    <div className=\"users-tooltip\">\n      {users.map((user) => (\n        <div>{user}</div>\n      ))}\n    </div>\n  );\n};\n\nconst useChatRoom = ({\n  chatId,\n  username,\n}: {\n  chatId: string;\n  username: string;\n}) => {\n  let socket = useContext(wsContext);\n\n  const messagesBottomAnchor = useRef<HTMLDivElement>(null);\n  const [messages, setMessages] = useState<(SystemMessage | UserMessage)[]>([]);\n  const [users, setUsers] = useState([]);\n\n  const handleSendMessage = (message: string) => {\n    if (!socket || !message) {\n      return;\n    }\n\n    socket.emit(\"message\", { message, chatId });\n  };\n\n  const handleUpdateMessages = (\n    newChatMessage: SystemMessage | UserMessage\n  ) => {\n    setMessages((messages) => [...messages, ...[newChatMessage]]);\n  };\n\n  useEffect(() => {\n    if (!socket || !chatId) return;\n    socket.emit(\"user-joined\", { chatId, username });\n\n    socket.on(\"user-joined\", ({ timestamp, message, connectedUsers }) => {\n      handleUpdateMessages({ type: \"system\", timestamp, message });\n      setUsers(connectedUsers);\n    });\n\n    socket.on(\"user-left\", ({ timestamp, message, connectedUsers }) => {\n      handleUpdateMessages({ type: \"system\", timestamp, message });\n      setUsers(connectedUsers);\n    });\n\n    socket.on(\"message\", ({ timestamp, username, message }) => {\n      handleUpdateMessages({ type: \"message\", timestamp, username, message });\n    });\n  }, [socket, chatId]);\n\n  useEffect(() => {\n    if (messagesBottomAnchor.current) {\n      messagesBottomAnchor.current.scrollIntoView({\n        block: \"nearest\",\n        behavior: \"smooth\",\n      });\n    }\n  }, [messages]);\n\n  return { messagesBottomAnchor, messages, handleSendMessage, users };\n};\n\nconst ChatRoom = ({\n  chatId,\n  username,\n}: {\n  chatId: string;\n  username: string;\n}) => {\n  const { messagesBottomAnchor, messages, handleSendMessage, users } =\n    useChatRoom({\n      chatId,\n      username,\n    });\n\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n\n  const handleFocusInput = () => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  return (\n    <div className=\"chat-room\" onClick={handleFocusInput}>\n      <div className=\"chat-room__messages\">\n        {messages.map((message) => {\n          if (message.type === \"system\") {\n            return (\n              <ChatSystemMessage\n                timestamp={message.timestamp}\n                message={message.message}\n              />\n            );\n          }\n\n          /* Way to discriminate an UserMessage from a SystemMessage */\n          if (\"username\" in message) {\n            return (\n              <ChatUserMessage\n                timestamp={message.timestamp}\n                username={message.username}\n                message={message.message}\n              />\n            );\n          }\n        })}\n        <div ref={messagesBottomAnchor} />\n      </div>\n      <SendMessageAction\n        inputRef={inputRef}\n        username={username}\n        sendMessage={handleSendMessage}\n      />\n      <UsersTooltip users={users} />\n    </div>\n  );\n};\n\nexport default ChatRoom;\n", "import originalSanitizeHtml from \"sanitize-html\";\n\nconst sanitizeHtmlOptions = {\n  allowedTags: [\"img\"],\n  allowedAttributes: {\n    img: [\"src\", \"class\"],\n  },\n  allowedIframeHostnames: [\"noelshack.com\"],\n};\n\nconst sanitizeHtml = (html: string): { __html: string } => {\n  return { __html: originalSanitizeHtml(html, sanitizeHtmlOptions) };\n};\n\nexport default sanitizeHtml;\n", "import { version as uuidVersion } from \"uuid\";\nimport { validate as uuidValidate } from \"uuid\";\n\nconst uuidValidateV4 = (uuid) => {\n  return uuidValidate(uuid) && uuidVersion(uuid) === 4;\n};\n\nexport default uuidValidateV4;\n", "export default {'entry':{'module':'/build/entry.client-5EMJK6RE.js','imports':['/build/_shared/chunk-LHCNBYRQ.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-XZVSN76O.js','imports':['/build/_shared/chunk-3EUIMNC5.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-JBFHHLZM.js','imports':['/build/_shared/chunk-I5Y6BFS2.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/chat':{'id':'routes/chat','parentId':'root','path':'chat','index':undefined,'caseSensitive':undefined,'module':'/build/routes/chat-UX2MDXET.js','imports':['/build/_shared/chunk-I5Y6BFS2.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'version':'98fe7bf5','hmr':undefined,'url':'/build/manifest-98FE7BF5.js'};", "\nimport * as entryServer from \"/project/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/_index.tsx\";\nimport * as route2 from \"./routes/chat.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v2_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_headers\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/chat\": {\n      id: \"routes/chat\",\n      parentId: \"root\",\n      path: \"chat\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };"],
  "mappings": "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",
  "names": ["isbot", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_node", "import_node", "invariant", "import_react", "import_jsx_dev_runtime", "classNames", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "action", "uuidv4", "import_node", "import_react", "import_classnames", "import_react", "originalSanitizeHtml", "import_jsx_dev_runtime", "classNames", "message", "messages", "username", "import_uuid", "uuidValidate", "uuidVersion", "import_jsx_dev_runtime"]
}
